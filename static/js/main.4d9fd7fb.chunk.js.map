{"version":3,"sources":["calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Form","styled","form","CalculatorContainer","div","Results","numberWithSpaces","num","isNaN","toString","replace","stringToNum","str","parseInt","Calculator","useState","localStorage","getItem","propertyPrice","setPropertyPrice","initialFee","setInitialFee","creditTerm","setCreditTerm","interestRate","setInterestRate","loanBody","Math","round","monthlyPayment","pow","income","overpayment","name","type","value","onChange","e","target","pattern","placeholder","className","onClick","preventDefault","setItem","id","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d9fd7fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    label {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    label {\r\n        color: #343a40;\r\n        font-weight: 500;\r\n        margin: 1em 0;\r\n    }\r\n    input {\r\n        width: 300px;\r\n        padding: 1em;\r\n        border: 1px solid #dee2e6;\r\n    }\r\n    button {\r\n        outline: none;\r\n        border: 1px solid #ced4da;\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n    }\r\n    .select {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        margin: 5px 0 1em 0;\r\n        button {\r\n            background-color: #ced4da;\r\n            padding: 5px 10px;\r\n            font-weight: 600;\r\n            color: #495057;\r\n            font-size: 0.8em;\r\n            margin: 0 5px;\r\n        }\r\n        .active {\r\n            background-color: #a2d2ff;\r\n            color: #fff;\r\n        }\r\n    }\r\n    .formBottom {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        margin: 1em 0;\r\n        button {\r\n            padding: 10px 40px;\r\n            font-weight: 700;\r\n            font-size: 1.1em;\r\n            margin: 0 5px;\r\n        }\r\n    }\r\n    #saveBtn {\r\n        background-color: #43aa8b;\r\n        color: #fff;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        width: 100vw;\r\n    }\r\n`;\r\nconst CalculatorContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    @media screen and (max-width: 992px) {\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst Results = styled.div`\r\n    margin-left: 15px;\r\n    background-color: #bde0fe;\r\n\r\n    .row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    .pair {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 15px;\r\n        min-width: 200px;\r\n    }\r\n    .name {\r\n        color: #343a40;\r\n        font-weight: 500;\r\n    }\r\n    .value {\r\n        font-weight: bold;\r\n        font-size: 1.5em;\r\n        color: #495057;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        margin: 0;\r\n        .pair {\r\n            padding: 5px;\r\n        }\r\n        .row {\r\n            width: 100vw;\r\n        }\r\n    }\r\n`;\r\n\r\nconst numberWithSpaces = (num) => {\r\n    if (isNaN(num)) return 0;\r\n\r\n    return num.toString().replace(/(?!^)(?=(?:\\d{3})+(?:\\.|$))/gm, ' ');\r\n};\r\n\r\nconst stringToNum = (str) => {\r\n    if (typeof str === 'number') return str;\r\n    return parseInt(str.replace(/\\s+/g, ''));\r\n};\r\n\r\nconst Calculator = () => {\r\n    const [propertyPrice, setPropertyPrice] = useState(\r\n        localStorage.getItem('propertyPrice') || 0\r\n    );\r\n    const [initialFee, setInitialFee] = useState(\r\n        localStorage.getItem('initialFee') || 0\r\n    );\r\n    const [creditTerm, setCreditTerm] = useState(\r\n        localStorage.getItem('creditTerm') || 0\r\n    );\r\n    const [interestRate, setInterestRate] = useState(\r\n        localStorage.getItem('interestRate') || 0\r\n    );\r\n\r\n    const loanBody = Math.round(propertyPrice - initialFee);\r\n    // prettier-ignore\r\n    const monthlyPayment = Math.round(loanBody * (interestRate / 1200 + (interestRate / 1200/(Math.pow((1 + (interestRate / 1200)),(creditTerm*12)) - 1))));\r\n    const income = Math.round(5 * (monthlyPayment / 3));\r\n    const overpayment = Math.round(\r\n        -(propertyPrice - monthlyPayment * creditTerm * 12)\r\n    );\r\n\r\n    return (\r\n        <CalculatorContainer>\r\n            <Form>\r\n                <label>\r\n                    Стоимость недвижимости, ₽\r\n                    <input\r\n                        name=\"propertyPrice\"\r\n                        type=\"text\"\r\n                        value={numberWithSpaces(propertyPrice)}\r\n                        onChange={(e) => {\r\n                            setPropertyPrice(\r\n                                stringToNum(stringToNum(e.target.value))\r\n                            );\r\n                        }}\r\n                        pattern=\"^[0-9\\s]*$\"\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    Первоначальный взнос, ₽\r\n                    <input\r\n                        name=\"initialFee\"\r\n                        type=\"text\"\r\n                        value={numberWithSpaces(initialFee)}\r\n                        onChange={(e) =>\r\n                            setInitialFee(stringToNum(e.target.value))\r\n                        }\r\n                        pattern=\"^[0-9\\s]*$\"\r\n                        placeholder=\"₽\"\r\n                    />\r\n                </label>\r\n                <div className=\"select\">\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setInitialFee(0.1 * propertyPrice);\r\n                        }}\r\n                        className={\r\n                            initialFee / propertyPrice === 0.1 ? 'active' : null\r\n                        }\r\n                    >\r\n                        10%\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setInitialFee(0.15 * propertyPrice);\r\n                        }}\r\n                        className={\r\n                            initialFee / propertyPrice === 0.15\r\n                                ? 'active'\r\n                                : null\r\n                        }\r\n                    >\r\n                        15%\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setInitialFee(0.2 * propertyPrice);\r\n                        }}\r\n                        className={\r\n                            initialFee / propertyPrice === 0.2 ? 'active' : null\r\n                        }\r\n                    >\r\n                        20%\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setInitialFee(0.25 * propertyPrice);\r\n                        }}\r\n                        className={\r\n                            initialFee / propertyPrice === 0.25\r\n                                ? 'active'\r\n                                : null\r\n                        }\r\n                    >\r\n                        25%\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setInitialFee(0.3 * propertyPrice);\r\n                        }}\r\n                        className={\r\n                            initialFee / propertyPrice === 0.3 ? 'active' : null\r\n                        }\r\n                    >\r\n                        30%\r\n                    </button>\r\n                </div>\r\n\r\n                <label>\r\n                    Срок кредита, лет\r\n                    <input\r\n                        name=\"creditTerm\"\r\n                        type=\"text\"\r\n                        value={numberWithSpaces(creditTerm)}\r\n                        onChange={(e) =>\r\n                            setCreditTerm(stringToNum(e.target.value))\r\n                        }\r\n                        pattern=\"^[0-9\\s]*$\"\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    Процентная ставка, %\r\n                    <input\r\n                        name=\"interestRate\"\r\n                        type=\"text\"\r\n                        value={numberWithSpaces(interestRate)}\r\n                        onChange={(e) =>\r\n                            setInterestRate(stringToNum(e.target.value))\r\n                        }\r\n                        pattern=\"^[0-9\\s]*$\"\r\n                    />\r\n                </label>\r\n                <div className=\"formBottom\">\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            localStorage.setItem(\r\n                                'propertyPrice',\r\n                                propertyPrice\r\n                            );\r\n                            localStorage.setItem('initialFee', initialFee);\r\n                            localStorage.setItem('creditTerm', creditTerm);\r\n                            localStorage.setItem('interestRate', interestRate);\r\n                        }}\r\n                        id=\"saveBtn\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setPropertyPrice(0);\r\n                            setInitialFee(0);\r\n                            setCreditTerm(0);\r\n                            setInterestRate(0);\r\n                        }}\r\n                        id=\"clearBtn\"\r\n                    >\r\n                        Clear\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n            <Results>\r\n                <div className=\"row\">\r\n                    <div className=\"pair\">\r\n                        <span className=\"name\">Ежемесячный платёж</span>\r\n                        <span className=\"value\">\r\n                            {numberWithSpaces(monthlyPayment)} ₽\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"pair\">\r\n                        <span className=\"name\">Необходимый доход</span>\r\n                        <span className=\"value\">\r\n                            {numberWithSpaces(income)} ₽\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"pair\">\r\n                        <span className=\"name\">Переплата</span>\r\n                        <span className=\"value\">\r\n                            {numberWithSpaces(overpayment)} ₽\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"pair\">\r\n                        <span className=\"name\">Тело кредита</span>\r\n                        <span className=\"value\">\r\n                            {numberWithSpaces(loanBody)} ₽\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </Results>\r\n        </CalculatorContainer>\r\n    );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Calculator from './calculator';\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    @media screen and (max-width: 992px) {\n        flex-direction: column;\n    }\n`;\n\nconst App = () => {\n    return (\n        <Container>\n            <Calculator />\n        </Container>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}